public boolean checkConnection(URLConnection urlConn)
    {
        try
        {;
            urlConn.setDoOutput(urlConn.getDoOutput());
            return false;
        }catch (IllegalStateException e)
        {
            return true;
        }
    }

    public int uploadDocument(Context cont, File file, String path, String data)
    {
        int response = 0;
        URLConnection urlConn = null;
        try
        {
            URL url = new URL(path);
            urlConn = url.openConnection();
            urlConn.setDoOutput(true);
            //boolean connected = checkConnection(urlConn);
            //if (!connected)
            //{
            if (urlConn instanceof HttpURLConnection)
            {
                ((HttpURLConnection) urlConn).setRequestMethod("POST");
                urlConn.setRequestProperty("Content-type", "text/plain");
                urlConn.setRequestProperty("Connection", "close");
                urlConn.setRequestProperty("http.keepAlive", "false");
                urlConn.connect();
            }
            //}
            BufferedOutputStream bos = new BufferedOutputStream(urlConn.getOutputStream());
            BufferedInputStream bis = new BufferedInputStream(Files.newInputStream(file.toPath()));

            int x;
            while((x = bis.read()) >-1)
            {
                bos.write(x);
            }
            String mess = ((HttpURLConnection)urlConn).getResponseMessage();
            bos.close();
            bis.close();
            //response = ((HttpURLConnection)urlConn).getResponseCode();

            ((HttpURLConnection) urlConn).disconnect();
            int y = 0;
        }catch (Exception e)
        {
            e.printStackTrace();
        }
        return response;
    }